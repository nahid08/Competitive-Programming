/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         123456789
#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(ll i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]={2, 2, -2, -2, 1, -1, 1, -1};
int dc[]={1,-1,  1, -1, 2,  2,-2, -2};
int dr1[]={0, 0, 0, 1, 1, 1, -1, -1, -1};
int dc1[]={-1,0, 1,-1, 0, 1, -1, 0,   1};
int dr2[]={0, 0, 1, -1};
int dc2[]={1,-1, 0,  0};
////////////////////////////
using namespace std;
 
 
ll pos[10005],sa[10005],gap,n,tmp[10005],lcp[10005];
string t;
 
 
bool sufcmp(ll i,ll j)
{
 if(pos[i]!=pos[j])
  return pos[i]<pos[j];
 i+=gap;
 j+=gap;
 return (i<n&&j<n)?pos[i]<pos[j]:i>j;
}
 
 
 
void buildsa()
{
 n=t.sz;
 ll i;
 f(i,0,n)sa[i]=i,pos[i]=t[i];
 for(gap=1;gap<=n;gap*=2)
 {
  sort(sa,sa+n,sufcmp);
  for(i=0;i+1<n;i++)tmp[i+1]=tmp[i]+sufcmp(sa[i],sa[i+1]);
  for(i=0;i<n;i++)pos[sa[i]]=tmp[i];
  if(tmp[n-1]==n-1)break;
 }
 
 
 
 
}
void lcp1()
{
 ll i,j,k;
 for(i=0,k=0;i<n;++i,k?k--:0)
 {
  if(pos[i]==n-1)continue;
  j=sa[pos[i]+1];
  while(i+k<n&&j+k<n&&t[i+k]==t[j+k])k++;
  lcp[pos[i]]=k;
 
 }
 
 
}
int main()
{
 ll tc,cas=0,i,j,ans,p,q;
 ent(tc);
 while(tc--)
 {
  cin>>t;
  ent2(p,q);
  buildsa();
  lcp1();
  ans=0;
  ll k=0;
  f(i,0,t.sz)
  {
   k=min(n-sa[i],q)-max(p-1,lcp[i]);
   if(k>0)ans+=k;
  }
  pf("Case %lld: %lld\n",++cas,ans);
  mem(sa);
  mem(pos);
  mem(lcp);
  mem(tmp);
 
 
 
 }
 return 0;
}
