/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         123456789
#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(ll i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]= {2,2,-2,-2,1,-1,1,-1};
int dc[]= {1,-1,1,-1,2,2,-2,-2};
int dr1[]= {0,0,1,1,1,-1,-1,-1};
int dc1[]= {1,-1,1,0,-1,0,1,-1};
int dr2[]= {0,0,1,-1};
int dc2[]= {1,-1,0,0};
////////////////////////////
using namespace std;
#define ma 100001
ll t[20][ma],mark[ma],par[ma],lev[ma],n;
vector<ll>adj[ma];
void dfs(ll u,ll p)
{
 mark[u]=1;
 if(p!=-1)
 {
 lev[u]=lev[p]+1;
 par[u]=p;
 }
 f(i,0,adj[u].sz)
 {
  ll k=adj[u][i];
  if(mark[k]==0)
  {
   dfs(k,u);
  }
 }
}
void sparse()
{

 mem(mark);mem(lev);mem(par);
 dfs(1,-1);

 ll i,j;
 memset(t,-1,sizeof(t));
 f(i,1,n+1)t[0][i]=par[i];
 for(j=1;(1<<j)<=n;j++)
 {
  for(i=1;i<=n;i++)
  {
   if(t[j-1][i]!=-1)
    t[j][i]=t[j-1][t[j-1][i]];
  }
 }
}
ll query(ll p,ll q)
{
 ll i;
 if(lev[p]<lev[q])swap(p,q);
 ll log=0;
 while(1)
 {
  if((1<<log)>lev[p])break;
  log++;
 }
 log--;
 for(i=log;i>=0;i--)
 {
  if(lev[p]-(1<<i)>=lev[q])
  {
   p=t[i][p];
  }
 }
 if(p==q)return p;
 for(i=log;i>=0;i--)
 {
  if(t[i][p]!=t[i][q]&&t[i][p]!=-1&&t[i][q]!=-1)
  {
   p=t[i][p];
   q=t[i][q];
  }
 }
 return t[0][p];

}
int main()
{
 ll i,j,u,v,m;
 while(cin>>n)
 {
  f(i,1,n)
  {
   ent2(u,v);
   adj[u].pb(v);
   adj[v].pb(u);
  }
  sparse();
  //f(i,1,n+1)cout<<par[i]<<" "<<lev[i]<<endl;
  ent(m);
  while(m--)
  {
   ent2(u,v);
   ll p=query(u,v);
   if(p==u||p==v)
   {
    ll k=abs(lev[u]-lev[v]);
    if(k%2==1)cout<<"0"<<endl;
    else cout<<"1"<<endl;
   }
   else
   {
    ll k=lev[p];
    cout<<k+1<<endl;
   }

   }

 }
 return 0;
}



//5
//1 2
//1 3
//2 4
//3 
