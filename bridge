/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         123456789
#define mod         1000000007
#define q(n)        q.push(n)
#define qi          queue<ll>
#define st          stack<ll>
#define pqi         priority_queue<ll>
#define mp1         map<ll,ll>
#define mp2         map<char,ll>
#define ull         unsigned long long int
#define f(i,k,n)    for(i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define mem1(a)     memset(a,-1,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s]
#define check(n,pos) (n&(1<<pos))
#define set(n,pos)  (n|(1<<pos))
//knight and king//
/*int dr[]={2,2,-2,-2,1,-1,1,-1};
int dc[]={1,-1,1,-1,2,2,-2,-2};
int dr1[]={0,0,1,1,1,-1,-1,-1};
int dc1[]={1,-1,1,0,-1,0,1,-1};
int dr2[]={0,0,1,-1};
int dc2[]={1,-1,0,0};*/
////////////////////////////
using namespace std;
#define mx 10001
vector<ll>adj[mx];
ll mark[mx],cut[mx],low[mx],tim[mx],t;
void dfs(ll u,ll from)
{
    ll ch=0;
    mark[u]=1;
    t++;
    tim[u]=low[u]=t;
    for(ll i=0;i<adj[u].sz;i++)
    {
        ll v=adj[u][i];
        if(v==from)continue;
 
        if(mark[v]==1)low[u]=min(low[u],tim[v]);
        else
        {
            ch++;
            dfs(v,u);
            low[u]=min(low[u],low[v]);
            if(tim[u]<=low[v]&&from!=-1)
            {
                cut[u]=1;
            }
        }
    }
    if(from==-1)cut[u]=ch>1;
}
int main()
{
    ll n,m,i,x,y,tc,cas=0;
    ent(tc);
    while(tc--)
    {
        ent2(n,m);
        for(i=0;i<m;i++)
        {
            ent2(x,y);
            adj[x].pb(y);
            adj[y].pb(x);
        }
        t=0;
        mem(mark);
        mem(cut);
        mem(tim);
        mem(low);
        dfs(1,-1);
        ll cn=0;
        for(i=1;i<=n;i++)
        {
 
            cn+=cut[i];
        }
        pf("Case %lld: %lld\n",++cas,cn);
        f(i,0,mx)adj[i].clr;
    }
    return 0;
}
 
