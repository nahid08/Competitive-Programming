ll p[ma],q[ma],dis[ma],n,m;
vector<ll>adj[ma];
bool bfs();
bool dfs(ll r);
ll hopcroft()
{
 ll cn=0,i;
 f(i,1,n+1)p[i]=0;
 f(i,1,m+1)q[i]=0;
 bfs();
 while(bfs())
 {
  for(i=1;i<=n;i++)
  {
   if(p[i]==0&&dfs(i)==true)
   {
    cn++;
   }
  }
 }
 return cn;
}
bool bfs()
{
 ll i,ur,uc;
 queue<ll>q1;
 f(i,1,n+1)
 {
  if(p[i]==0)
  {
   dis[i]=0;
   q1.push(i);
  }
  else dis[i]=inf;
 }
 dis[0]=inf;
 while(q1.sz>0)
 {
  ll ur=q1.front();q1.pop();
  if(dis[ur]<dis[0])
  {
   for(int j=0;j<adj[ur].sz;j++)
   {
    uc=adj[ur][j];
    if(dis[q[uc]]==inf)
    {
     dis[q[uc]]=dis[ur]+1;
     q1.push(q[uc]);
    }
   }
  }
 }
 if(dis[0]!=inf)return true;
 else return false;
 
}
bool dfs(ll u)
{
 if(u!=0)
 {
  for(int i=0;i<adj[u].sz;i++)
  {
   ll ur=adj[u][i];
   if(dis[q[ur]]==dis[u]+1)
   {
    if(dfs(q[ur])==true)
    {
     p[u]=ur;
     q[ur]=u;
     return true;
    }
   }
  }
  dis[u]=inf;
  return false;
 }
 return true;
}
